// <auto-generated />
using System;
using Octoplex.Clientes.Infra.Data.Contexts;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Octoplex.Clientes.Infra.Data.Migrations
{
    [DbContext(typeof(ClienteDbContext))]
    partial class ClienteDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.15")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("CK.Clientes.Domain.Clientes.Cliente", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("id");

                    b.Property<string>("Bairro")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Celular")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Cep")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Cidade")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CnpjCpf")
                        .HasMaxLength(18)
                        .HasColumnType("nvarchar(18)")
                        .HasColumnName("CnpjCpf");

                    b.Property<string>("CodCidade")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Convenio")
                        .HasColumnType("int");

                    b.Property<double>("Credito")
                        .HasColumnType("float")
                        .HasColumnName("Credito");

                    b.Property<string>("DtAlt")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("DataAlteracao");

                    b.Property<string>("DtNasc")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("DataNascimento");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Endereco")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("EnvEmail")
                        .HasColumnType("int")
                        .HasColumnName("EnviaEmail");

                    b.Property<string>("Fantasia")
                        .HasMaxLength(120)
                        .HasColumnType("nvarchar(120)")
                        .HasColumnName("NomeFantasia");

                    b.Property<string>("Fone")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Guid")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("GuidIntegracaoNet");

                    b.Property<int>("IdEmp")
                        .HasColumnType("int")
                        .HasColumnName("IdEmpresa");

                    b.Property<int>("IndIeDest")
                        .HasColumnType("int")
                        .HasColumnName("IndicadorIE");

                    b.Property<string>("InscRg")
                        .HasMaxLength(18)
                        .HasColumnType("nvarchar(18)")
                        .HasColumnName("IeRg");

                    b.Property<int>("Lanca")
                        .HasColumnType("int")
                        .HasColumnName("lanca");

                    b.Property<string>("NomeCliente")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("Nome");

                    b.Property<string>("Numero")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Obs")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)")
                        .HasColumnName("Observacao");

                    b.Property<double>("Pontos")
                        .HasColumnType("float")
                        .HasColumnName("Pontos");

                    b.Property<string>("Suframa")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Tipo")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("TipoCadastro");

                    b.Property<string>("Uf")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("VctoFixo")
                        .HasColumnType("int")
                        .HasColumnName("VencimentoFixo");

                    b.HasKey("Id")
                        .HasName("id");

                    b.ToTable("Cliente");
                });

            modelBuilder.Entity("CK.Pedidos.Domain.Pedidos.Pedido", b =>
                {
                    b.Property<Guid?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("ClienteId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<double>("Total")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.HasIndex("ClienteId");

                    b.ToTable("Pedido");
                });

            modelBuilder.Entity("CK.Pedidos.Domain.Pedidos.Pedido", b =>
                {
                    b.HasOne("CK.Clientes.Domain.Clientes.Cliente", null)
                        .WithMany("Pedidos")
                        .HasForeignKey("ClienteId");
                });

            modelBuilder.Entity("CK.Clientes.Domain.Clientes.Cliente", b =>
                {
                    b.Navigation("Pedidos");
                });
#pragma warning restore 612, 618
        }
    }
}
